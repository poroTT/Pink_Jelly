# mariadb ??
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/pink_jelly
#spring.datasource.username=Pink_Jelly
#spring.datasource.password=0808

# mybatis ??
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://awseb-e-2cpwguu4em-stack-awsebrdsdatabase-civcmroiauae.cnv1nl1zjeof.ap-northeast-2.rds.amazonaws.com/pink_jelly
spring.datasource.username=pinkjelly
spring.datasource.password=0808

server.port=5000

logging.level.org.springframework=info
logging.level.com.example=debug

logging.level.org.springframework.security=trace
spring.main.allow-bean-definition-overriding=true


# mybatis
mybatis.mapper-locations=classpath:mybatis_mapper/**/*.xml

# kakao login
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-id=	dc77982ae454fd8da5fc3e6d8e62fade

spring.security.oauth2.client.registration.kakao.client-secret=YJWQm1ANiEsQZuX73rFkxbCPuFg40qcL
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

# google login
# provider

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth

spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# registration

spring.security.oauth2.client.registration.google.client-name=google

spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.google.redirect_uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=623885379362-82bn19f0h8ibsn1va24sgccfm11iapd9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

spring.security.oauth2.client.registration.google.client-authentication-method=POST

spring.security.oauth2.client.registration.google.scope=profile,email

# mail setting
mail.smtp.auth=true
mail.smtp.starttls.required=true
mail.smtp.starttls.enable=true
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.smtp.socketFactory.fallback=false
mail.smtp.port=465
mail.smtp.socketFactory.port=465

# mail send setting
myapp.custom.mail.sender.username=pinkjelly0808
myapp.custom.mail.sender.password=jellypink0808!
myapp.custom.mail.sender.host=smtp.naver.com
myapp.custom.mail.sender.mailFrom=pinkjelly0808@naver.com
myapp.custom.mail.sender.mailFromName=PinkJelly

spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=c:\\pj_img
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB

com.example.mainBoardUpload.path=c:\\pj_img/mainBoard
com.example.profileUpload.path=c:\\pj_img/profile
com.example.tempUpload.path=c:\\pj_img/temp
com.example.catsMeUpload.path=c:\\pj_img/catsMe
